/*
* # MOBILE (<768px)---------------------------------------------
* fixture--------------------------sm
* of columns-----------------------4
* gutter---------------------------20px
* margin---------------------------5px
* container-size-------------------100% - (5px * 2)
*
* # TABLET (≥768px)---------------------------------------------
* fixture--------------------------md
* of columns-----------------------12
* gutter---------------------------20px
* margin---------------------------30px
* container-size-------------------100% - (30px * 2)
* max-container-size---------------960px
*
* # DESKTOP (≥1200px)---------------------------------------------
* fixture--------------------------lg
* of columns-----------------------12
* gutter---------------------------20px
* unit-----------------------------75px
* margin---------------------------auto
* container-size-------------------1140px
* max-container-size---------------1140px
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;
// padding값이 60이라 실제 사이즈가 900이 돼서 실제사이즈를 960으로 하기 위해 양옆 padding값을 더해준다

$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;
// 1140px이라 쓰는거 보다 재사요성이 좋다 나중에 columns개수가 바뀌거나 unit사이즈가 바뀌는 일이 생겼을때 연산을 다시 하지 않아도 된다
// @debug ($lg-unit + $gutter) * $lg-columns; > 1140px

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  /*class이름이 col-로 시작하는 모든요소 css기능*/
  [class^='col-'] {
    padding: 0 $gutter / 2;
  }

  //반복문 변수i를 만들어서 col-sm-1 ~ col-sm-4까지 for문 돌리기
  @for $i from 1 through $sm-columns {
    // col-sm-1 ~ 4 변수 만듬
    .col-sm-#{$i} {
      // #{$i}변수가 가지고 있는 값으로 출력
      //   width: $i / $sm-columns * 100%;
      width: percentage($i / $sm-columns);
    }
  }

  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      // col-md-1 ~ 12 변수 만듬
      .col-md-#{$i} {
        // #{$i}변수가 가지고 있는 값으로 출력
        //   width: $i / $md-columns * 100%;
        width: percentage($i / $md-columns);
      }
    }
  }

  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      // col-lg-1 ~ 12 변수 만듬
      .col-lg-#{$i} {
        // #{$i}변수가 가지고 있는 값으로 출력
        //   width: $i / $lg-columns * 100%;
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
